0.
    GIF:    8bits (256 colores)
    JPEG:   24bits (16,777,215 de colores)
    BMP:    24bits (16,777,215 de colores)
    PNG:    64bits (Al final aparece -1 en la calculadora - Error)

1.
    GIF (Soporta la animación)

2.
    Deferencia entre compresión con pérdida y sin pérdida
        Una compresión sin pérdidas devuelve la imagen descomprimida exactamente igual a la original.
        Por el contrario, la compresión con pérdidas acepta alguna degradación en la imagen de cara a una mayor compresión.

3.
    Formato comprimido con pérdidas (Lossy)
        PNG, BMP, GIF

4.
    El OS almacena los datos en clústeres, cuyo tamaño están dados por el
    tipo de tabla de asignación de ficheros (FAT) que esté utilizando.

    Esta guarda los vínculos entre los clústeres que están interconectados
    formando un fichero. Algunos de los errores de restauración, ocurren cuando
    estos están dañados.

    El fichero no se elimina realmente del disco duro; lo único que realiza es cambiar la
    ubicación del fichero eliminado, que pasa a apuntar a la papelera. Los clústeres de
    datos nos se modifican en modo alguno. Aunque esto también se elimine de la papelera,
    lo cierto es que los clústeres permanecen intactos, sólo que esta vez la entrada del fichero
    en la FAT, se actualiza, de manera que los clústeres quedan libres para ser actualizado, y el
    primer carácter del nombre del fichero se cambia para reflejar este estado.

5.
    Aplicando formato a bajo nivel.

6.
    Es una librería (cabecera) que declara un conjunto de tipos int que tienen límites
    de anchos específicos (número de bits utilizados para almacenar su valor), la cual este
    debe definir el conjunto de macros correspondientes.

    Éstas macros especifican dichos límites de los tipos declarados y construyen constantes.

7.
    Especifican el ancho (número de bits) de los tipos int asignados y no asignaddos

8.
    BYTE:   8
    DWORD:  32
    LONG:   32
    WORD:   16

9.
    En ASCII, los primeros dos bytes son el carácter 'B' y 'M'

10.
    bfSize, describe el tamaño del fichero completo en bytes.
    biSize, es el tamaño de la estructura BITMAPINFOHEADER en bytes.

11.
    Significa que la orientación vertical de la imagen es de arriba hacia abajo.

12.
    El campo es: biBitCount

13.
    Lo devolvería en caso de que no se pase en los argumentos la salida del fichero entrante.

14.
    Para que lea 1 byte a la vez.

15.
    El tamaño de cada línea, ya que debe ser múltilo de 4.

16.
    Se desplaza a una ubicación en específica (inicio, actual o final) de un fichero
    para hacer la búsqueda desde alguno de esos ángulos.

17.
    Busca la ubicación de CURNET.

18. TODO
